{"version":3,"sources":["App.tsx","GoodCard.tsx","GoodList.tsx","index.tsx"],"names":["SortType","GoodCard","good","GoodList","goods","map","goodsFromServer","App","NONE","ALPHABET","LENGTH","useState","sortType","setSortType","isReversed","setIsReversed","realGoods","visibleGoods","sort","good1","good2","localeCompare","length","reverse","getReorderedGoods","isSorted","className","type","cn","onClick","ReactDOM","render","document","getElementById"],"mappings":"6KAmBKA,E,0ECbQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,oBAAI,UAAQ,OAAZ,SACGA,KCDQC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,6BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,SFJpBI,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkCE,IAAMO,EAAM,WACjB,IAAQC,EAA2BR,EAA3BQ,KAAMC,EAAqBT,EAArBS,SAAUC,EAAWV,EAAXU,OACxB,EAAgCC,mBAASH,GAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAhCD,SACLZ,EADK,GAGJ,IADCQ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOb,GAqBzB,OAnBIQ,GACFK,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKZ,EAASS,SACZ,OAAOU,EAAME,cAAcD,GAE7B,KAAKpB,EAASU,OACZ,OAAOS,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXR,GACFG,EAAaM,UAGRN,EAOWO,CAAkBlB,EAAiB,CACnDM,WACAE,eAGIW,EAAWb,IAAaH,GAAYG,IAAaF,GAAUI,EAOjE,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYhB,IAAaH,IAE3BoB,QAAS,kBAAMhB,EAAYJ,IAL7B,iCAUA,wBACEkB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYhB,IAAaF,IAE3BmB,QAAS,kBAAMhB,EAAYH,IAL7B,4BAUA,wBACEiB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAad,IAEfe,QAAS,kBAAMd,GAAeD,IALhC,qBASCW,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAzCU,WAClBhB,EAAYL,GACZO,GAAc,IAoCR,sBAUJ,cAAC,EAAD,CAAUX,MAAOY,QG7GvBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.12d7faa7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { GoodList } from './GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: { sortType: SortType, isReversed: boolean },\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType) {\n    visibleGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const { NONE, ALPHABET, LENGTH } = SortType;\n  const [sortType, setSortType] = useState(NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const realGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const isSorted = sortType === ALPHABET || sortType === LENGTH || isReversed;\n\n  const handleReset = () => {\n    setSortType(NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortType !== ALPHABET,\n          })}\n          onClick={() => setSortType(ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortType !== LENGTH,\n          })}\n          onClick={() => setSortType(LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n        {isSorted && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodList goods={realGoods} />\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  good: string;\n};\n\nexport const GoodCard: React.FC<Props> = ({ good }) => (\n  <li data-cy=\"Good\">\n    {good}\n  </li>\n);\n","import React from 'react';\nimport { GoodCard } from './GoodCard';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <GoodCard good={good} key={good} />\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}